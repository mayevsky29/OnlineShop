{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\OnlineShop\\\\client\\\\src\\\\components\\\\common\\\\MyTextInput.js\",\n    _s = $RefreshSig$();\n\nimport { useField } from 'formik';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyTextInput = _ref => {\n  _s();\n\n  let {\n    label,\n    ...props\n  } = _ref;\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props); //console.log(\"fields\", field);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      className: \"form-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: classNames(\"form-control\", {\n        \"is-invalid\": meta.touched && meta.error\n      }, {\n        \"is-valid\": meta.touched && !meta.error\n      }),\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = MyTextInput;\nexport default MyTextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyTextInput\");","map":{"version":3,"names":["useField","classNames","MyTextInput","label","props","field","meta","id","name","touched","error"],"sources":["E:/Projects/OnlineShop/client/src/components/common/MyTextInput.js"],"sourcesContent":["import { useField } from 'formik';\r\nimport classNames from 'classnames';\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n    // which we can spread on <input>. We can use field meta to show an error\r\n    // message if the field is invalid and it has been touched (i.e. visited)\r\n    const [field, meta] = useField(props);\r\n    //console.log(\"fields\", field);\r\n    return (\r\n      <div className=\"mb-3\">\r\n        <label htmlFor={props.id || props.name} className=\"form-label\">{label}</label>\r\n        <input className={classNames(\"form-control\", \r\n            {\"is-invalid\": meta.touched && meta.error},\r\n            {\"is-valid\": meta.touched && !meta.error},\r\n            )} {...field} {...props} />\r\n        {(meta.touched && meta.error) && <div className=\"invalid-feedback\">{meta.error}</div>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default MyTextInput;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,MAAMC,WAAW,GAAG,QAAyB;EAAA;;EAAA,IAAxB;IAAEC,KAAF;IAAS,GAAGC;EAAZ,CAAwB;EACzC;EACA;EACA;EACA,MAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBN,QAAQ,CAACI,KAAD,CAA9B,CAJyC,CAKzC;;EACA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MAAO,OAAO,EAAEA,KAAK,CAACG,EAAN,IAAYH,KAAK,CAACI,IAAlC;MAAwC,SAAS,EAAC,YAAlD;MAAA,UAAgEL;IAAhE;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,SAAS,EAAEF,UAAU,CAAC,cAAD,EACxB;QAAC,cAAcK,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI;MAApC,CADwB,EAExB;QAAC,YAAYJ,IAAI,CAACG,OAAL,IAAgB,CAACH,IAAI,CAACI;MAAnC,CAFwB,CAA5B;MAAA,GAGWL,KAHX;MAAA,GAGsBD;IAHtB;MAAA;MAAA;MAAA;IAAA,QAFF,EAMIE,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI,KAAtB,iBAAgC;MAAK,SAAS,EAAC,kBAAf;MAAA,UAAmCJ,IAAI,CAACI;IAAxC;MAAA;MAAA;MAAA;IAAA,QANnC;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAhBH;;GAAMR,W;UAIoBF,Q;;;KAJpBE,W;AAkBJ,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}